(self.webpackChunk_mohit_raj_purohit_component_library=self.webpackChunk_mohit_raj_purohit_component_library||[]).push([[365],{"./src/components/atoms/Button/Button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});__webpack_require__("./node_modules/react/index.js");var emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),emotion_is_prop_valid_esm=__webpack_require__("./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js");const styles=emotion_react_browser_esm.iv`
	background-color: #4285f4;
	color: white;
	padding: 10px 20px;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 16px;
	&:hover {
		background-color: #357ae8;
	}
`,StyledButton=(0,emotion_styled_browser_esm.Z)("button",{shouldForwardProp:prop=>(0,emotion_is_prop_valid_esm.Z)(prop)&&"color"!==prop&&"hoverColor"!==prop})((props=>emotion_react_browser_esm.iv`
		${styles};
		color: ${props.color||props.theme.colors.white};
		&:hover {
			color: ${props.hoverColor};
		}
	`));try{StyledButton.displayName="StyledButton",StyledButton.__docgenInfo={description:"",displayName:"StyledButton",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any>"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"",name:"hoverColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/atoms/Button/ButtonStyles.tsx#StyledButton"]={docgenInfo:StyledButton.__docgenInfo,name:"StyledButton",path:"src/components/atoms/Button/ButtonStyles.tsx#StyledButton"})}catch(__react_docgen_typescript_loader_error){}var emotion_element_c39617d8_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=props=>{const theme=(0,emotion_element_c39617d8_browser_esm.u)();return(0,jsx_runtime.jsx)(StyledButton,{theme,color:props.color,hoverColor:props.hoverColor,onClick:props.onClick,children:props.label})};Button.displayName="Button";const Button_Button=Button;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},hoverColor:{defaultValue:null,description:"",name:"hoverColor",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/atoms/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/atoms/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}var esm=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),dist_esm=__webpack_require__("./node_modules/@storybook/testing-library/dist/esm/index.js");const Button_stories={title:"Atoms/Button",component:Button_Button,tags:["autodocs"],argTypes:{onClick:{action:!0}}},Default={args:{label:"Button",hoverColor:"black"},play:async({args,canvasElement})=>{const canvas=(0,dist_esm.uh)(canvasElement);await dist_esm.mV.click(canvas.getByRole("button")),await(0,esm.l)(args.onClick).toHaveBeenCalled()}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Button',\n    // color: 'red',\n    hoverColor: 'black'\n  },\n  play: async ({\n    args,\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('button'));\n    await expect(args.onClick).toHaveBeenCalled();\n  }\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"?4f7e":()=>{}}]);
//# sourceMappingURL=components-atoms-Button-Button-stories.4cb3bdbd.iframe.bundle.js.map